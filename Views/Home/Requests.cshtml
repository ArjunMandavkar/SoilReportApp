@model X.PagedList.IPagedList<Request>
@using X.PagedList.Mvc.Core
@{
    ViewData["Title"] = "Requests from farmers";
}
<h1>@ViewData["Title"]</h1>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Username</th>
            <th>Device Id</th>
            <th>NAvg</th>
            <th>PAvg</th>
            <th>KAvg</th>
            <th>Moisture Average</th>
            <th>Soil Type</th>
            <th>Crop</th>
            <th>Crop Stage</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var request in Model)
    {
        <tr>
            <td>@request.Farmer?.Username</td>
            <td>@request.DeviceId</td>
            <td>@request.NAvg.ToString("0.##")</td>
            <td>@request.PAvg.ToString("0.##")</td>
            <td>@request.KAvg.ToString("0.##")</td>
            <td>@request.MoistureAvg.ToString("0.##")</td>
            <td>@request.SoilType?.Name</td>
            <td>@request.Crop?.Name</td>
            <td>@request.CropStage?.Name</td>
            <td>@request.Status</td>
        </tr>
    }
    </tbody>
</table>

<!-- Page Number Label -->
<div class="d-flex justify-content-between align-items-center">
    <span class="fw-bold">Page Number: @Model.PageNumber / @Model.PageCount</span>

    <!-- Pagination Controls -->
    @Html.PagedListPager(Model, page => Url.Action("Requests", new { page }),
        new PagedListRenderOptions { DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded, DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded })
</div>